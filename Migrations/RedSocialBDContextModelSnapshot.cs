// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedSocial.Models;

namespace RedSocial.Migrations
{
    [DbContext(typeof(RedSocialBDContext))]
    partial class RedSocialBDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RedSocial.Models.Amistad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aceptada")
                        .HasColumnName("aceptada")
                        .HasColumnType("bit");

                    b.Property<string>("EmailReciver")
                        .IsRequired()
                        .HasColumnName("emailReciver")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailSender")
                        .IsRequired()
                        .HasColumnName("emailSender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EmailReciver");

                    b.HasIndex("EmailSender");

                    b.ToTable("Amistad");
                });

            modelBuilder.Entity("RedSocial.Models.Comentario", b =>
                {
                    b.Property<int>("PublicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("publicacionId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnName("texto")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("PublicacionId", "Email")
                        .HasName("PK_Comentarios");

                    b.HasIndex("Email");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("RedSocial.Models.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("imagenId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnName("fullPath")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PublicacionId")
                        .HasColumnName("publicacionId")
                        .HasColumnType("int");

                    b.HasKey("ImagenId");

                    b.HasIndex("PublicacionId");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("RedSocial.Models.Like", b =>
                {
                    b.Property<int>("PublicacionId")
                        .HasColumnName("publicacionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PublicacionId", "Email")
                        .HasName("PK_Likes");

                    b.HasIndex("Email");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("RedSocial.Models.Publicacion", b =>
                {
                    b.Property<int>("PublicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("publicacionId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnName("texto")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnName("userEmail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PublicacionId");

                    b.HasIndex("UserEmail");

                    b.ToTable("Publicacion");
                });

            modelBuilder.Entity("RedSocial.Models.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("PreguntaSecreta")
                        .IsRequired()
                        .HasColumnName("preguntaSecreta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespuestaSecreta")
                        .IsRequired()
                        .HasColumnName("respuestaSecreta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email")
                        .HasName("PK_Usuarios");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("RedSocial.Models.Amistad", b =>
                {
                    b.HasOne("RedSocial.Models.Usuario", "EmailReciverNavigation")
                        .WithMany("AmistadEmailReciverNavigation")
                        .HasForeignKey("EmailReciver")
                        .HasConstraintName("FK_Amistad_UsuariosReceiver")
                        .IsRequired();

                    b.HasOne("RedSocial.Models.Usuario", "EmailSenderNavigation")
                        .WithMany("AmistadEmailSenderNavigation")
                        .HasForeignKey("EmailSender")
                        .HasConstraintName("FK_Amistad_UsuariosSender")
                        .IsRequired();
                });

            modelBuilder.Entity("RedSocial.Models.Comentario", b =>
                {
                    b.HasOne("RedSocial.Models.Usuario", "EmailNavigation")
                        .WithMany("Comentario")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK_Comentario_Usuario")
                        .IsRequired();

                    b.HasOne("RedSocial.Models.Publicacion", "Publicacion")
                        .WithMany("Comentario")
                        .HasForeignKey("PublicacionId")
                        .HasConstraintName("FK_Comentario_Publicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("RedSocial.Models.Imagen", b =>
                {
                    b.HasOne("RedSocial.Models.Publicacion", "Publicacion")
                        .WithMany("Imagen")
                        .HasForeignKey("PublicacionId")
                        .HasConstraintName("FK_Imagen_Publicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("RedSocial.Models.Like", b =>
                {
                    b.HasOne("RedSocial.Models.Usuario", "EmailNavigation")
                        .WithMany("Like")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK_Like_Usuario")
                        .IsRequired();

                    b.HasOne("RedSocial.Models.Publicacion", "Publicacion")
                        .WithMany("Like")
                        .HasForeignKey("PublicacionId")
                        .HasConstraintName("FK_Like_Publicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("RedSocial.Models.Publicacion", b =>
                {
                    b.HasOne("RedSocial.Models.Usuario", "UserEmailNavigation")
                        .WithMany("Publicacion")
                        .HasForeignKey("UserEmail")
                        .HasConstraintName("FK_Publicacion_UsuarioCreador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
